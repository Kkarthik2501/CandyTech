{"ast":null,"code":"var _jsxFileName = \"/Users/sathwik/College/ReactApp/src/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ToggleSwitch from './ToggleSwitch';\nimport EmployeeTable from './EmployeeTable';\nimport './style.css';\nimport sampleData from './sampleData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [showActiveOnly, setShowActiveOnly] = useState(true);\n  useEffect(() => {\n    fetchEmployeesData();\n  }, []);\n  const fetchEmployeesData = async () => {\n    try {\n      // Your API call to fetch employee data\n      const response = await fetch('https://testsyncoffice.netlify.app/.netlify/functions/api/getEmployeesData', {\n        mode: 'no-cors'\n      });\n      const data = await response.json();\n      setEmployees(data);\n      //setEmployees(sampleData.employeeData);\n    } catch (error) {\n      console.error('Error fetching employees data:', error);\n    }\n  };\n  const handleToggleSwitch = () => {\n    setShowActiveOnly(!showActiveOnly);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Directory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n      checked: showActiveOnly,\n      onChange: handleToggleSwitch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeTable, {\n      employees: employees,\n      showActiveOnly: showActiveOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"wbYLt2vyE07L/lSzqJgQL3TNzRM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","ToggleSwitch","EmployeeTable","sampleData","jsxDEV","_jsxDEV","Home","_s","employees","setEmployees","showActiveOnly","setShowActiveOnly","fetchEmployeesData","response","fetch","mode","data","json","error","console","handleToggleSwitch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/sathwik/College/ReactApp/src/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ToggleSwitch from './ToggleSwitch';\nimport EmployeeTable from './EmployeeTable';\nimport './style.css';\nimport sampleData from './sampleData.json';\n\n\nconst Home = () => {\n  const [employees, setEmployees] = useState([]);\n  const [showActiveOnly, setShowActiveOnly] = useState(true);\n\n  useEffect(() => {\n    fetchEmployeesData();\n  }, []);\n\n  const fetchEmployeesData = async () => {\n    try {\n      // Your API call to fetch employee data\n      const response = await fetch('https://testsyncoffice.netlify.app/.netlify/functions/api/getEmployeesData',  { mode: 'no-cors'});\n      const data = await response.json();\n      setEmployees(data);\n      //setEmployees(sampleData.employeeData);\n    } catch (error) {\n      console.error('Error fetching employees data:', error);\n    }\n  };\n\n  const handleToggleSwitch = () => {\n    setShowActiveOnly(!showActiveOnly);\n  };\n\n  \n  return (\n    <div className=\"container\">\n      <h2>Employee Directory</h2>\n      \n        <ToggleSwitch\n         checked={showActiveOnly}\n        onChange={handleToggleSwitch}\n        />\n      \n      <EmployeeTable employees={employees} showActiveOnly={showActiveOnly} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,aAAa;AACpB,OAAOC,UAAU,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdY,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4EAA4E,EAAG;QAAEC,IAAI,EAAE;MAAS,CAAC,CAAC;MAC/H,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCR,YAAY,CAACO,IAAI,CAAC;MAClB;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/BT,iBAAiB,CAAC,CAACD,cAAc,CAAC;EACpC,CAAC;EAGD,oBACEL,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzBrB,OAAA,CAACJ,YAAY;MACZ0B,OAAO,EAAEjB,cAAe;MACzBkB,QAAQ,EAAER;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAEJrB,OAAA,CAACH,aAAa;MAACM,SAAS,EAAEA,SAAU;MAACE,cAAc,EAAEA;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV,CAAC;AAACnB,EAAA,CArCID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}