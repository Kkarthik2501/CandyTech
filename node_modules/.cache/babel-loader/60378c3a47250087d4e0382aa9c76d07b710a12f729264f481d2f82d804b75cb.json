{"ast":null,"code":"var _jsxFileName = \"/Users/sathwik/College/ReactApp/src/ToggleSwitch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Switch from 'react-switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleSwitch = _ref => {\n  _s();\n  let {\n    isActive,\n    onToggle\n  } = _ref;\n  const [isChecked, setIsChecked] = useState(isActive);\n  const handleToggle = () => {\n    const newState = !isChecked;\n    setIsChecked(newState);\n    onToggle(newState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"switch\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"switch-text\",\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      checked: isChecked,\n      onChange: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"switch-text\",\n      children: \"Inactive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleSwitch, \"jmkUBWQs9ifFAXrSKzJXRXH/H34=\");\n_c = ToggleSwitch;\nexport default ToggleSwitch;\nvar _c;\n$RefreshReg$(_c, \"ToggleSwitch\");","map":{"version":3,"names":["React","useState","Switch","jsxDEV","_jsxDEV","ToggleSwitch","_ref","_s","isActive","onToggle","isChecked","setIsChecked","handleToggle","newState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/sathwik/College/ReactApp/src/ToggleSwitch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Switch from 'react-switch';\n\nconst ToggleSwitch = ({ isActive, onToggle }) => {\n  const [isChecked, setIsChecked] = useState(isActive);\n\n  const handleToggle = () => {\n    const newState = !isChecked;\n    setIsChecked(newState);\n    onToggle(newState);\n  };\n\n  return (\n    <label className=\"switch\">\n      <span className=\"switch-text\">Active</span>\n      <Switch checked={isChecked} onChange={handleToggle} />\n      <span className=\"switch-text\">Inactive</span>\n    </label>\n  );\n};\n\nexport default ToggleSwitch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGC,IAAA,IAA4B;EAAAC,EAAA;EAAA,IAA3B;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAC1C,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAACO,QAAQ,CAAC;EAEpD,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,QAAQ,GAAG,CAACH,SAAS;IAC3BC,YAAY,CAACE,QAAQ,CAAC;IACtBJ,QAAQ,CAACI,QAAQ,CAAC;EACpB,CAAC;EAED,oBACET,OAAA;IAAOU,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACvBX,OAAA;MAAMU,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3Cf,OAAA,CAACF,MAAM;MAACkB,OAAO,EAAEV,SAAU;MAACW,QAAQ,EAAET;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDf,OAAA;MAAMU,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEZ,CAAC;AAACZ,EAAA,CAhBIF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAkBlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}